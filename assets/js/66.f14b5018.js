(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{313:function(t,e,a){"use strict";a.r(e);var r=a(28),v=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue和react比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue和react比较"}},[t._v("#")]),t._v(" Vue和React比较")]),t._v(" "),a("h2",{attrs:{id:"相同点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[t._v("#")]),t._v(" 相同点")]),t._v(" "),a("ul",[a("li",[t._v("专注于UI，路由和状态管理交给其他框架")]),t._v(" "),a("li",[t._v("都使用虚拟DOM")]),t._v(" "),a("li",[t._v("组件化")]),t._v(" "),a("li",[t._v("都有浏览器扩展开发工具")])]),t._v(" "),a("h2",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("h3",{attrs:{id:"渲染模板的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染模板的方式"}},[t._v("#")]),t._v(" 渲染模板的方式")]),t._v(" "),a("p",[t._v("react用jsx渲染模板， vue使用template")]),t._v(" "),a("p",[t._v("React是在组件JS代码中，通过原生JS实现模板中的常见语法，比如插值，条件，循环等，都是通过JS语法实现的")]),t._v(" "),a("p",[t._v("Vue是在和组件JS代码分离的单独的模板中，通过指令来实现的，比如条件语句就需要 v-if 来实现")]),t._v(" "),a("h3",{attrs:{id:"状态管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[t._v("#")]),t._v(" 状态管理")]),t._v(" "),a("ul",[a("li",[t._v("Redux使用的是不可变数据，Redux每次都是用新的state替换旧的state。而Vuex的数据是可变的，Vuex是直接修改")]),t._v(" "),a("li",[t._v("Redux 在检测数据变化的时候，是通过 diff 的方式比较差异的，而Vuex其实和Vue的原理一样，是通过 getter/setter来比较的（如果看Vuex源码会知道，其实他内部直接创建一个Vue实例用来跟踪数据变化")])]),t._v(" "),a("h3",{attrs:{id:"周边框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#周边框架"}},[t._v("#")]),t._v(" 周边框架")]),t._v(" "),a("ul",[a("li",[t._v("vue官方维护主要的框架，vue-router, vuex, vue-cli等配套工具.")]),t._v(" "),a("li",[t._v("react的 redux， mobx，react-router由社区维护。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);
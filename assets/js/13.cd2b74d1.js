(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{258:function(v,t,_){"use strict";_.r(t);var e=_(28),l=Object(e.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"http"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[v._v("#")]),v._v(" HTTP")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP",target:"_blank",rel:"noopener noreferrer"}},[v._v("HTTP"),_("OutboundLink")],1),v._v(" 超文本传输协议")]),v._v(" "),_("h2",{attrs:{id:"http缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[v._v("#")]),v._v(" HTTP缓存")]),v._v(" "),_("p",[v._v("HTTP缓存可以分为两大类，强缓存和协商缓存。")]),v._v(" "),_("p",[v._v("缓存的优点")]),v._v(" "),_("ul",[_("li",[v._v("节省宽度流量")]),v._v(" "),_("li",[v._v("减少服务器的负担，")]),v._v(" "),_("li",[v._v("加快网页加载的速度")])]),v._v(" "),_("h3",{attrs:{id:"强制缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[v._v("#")]),v._v(" 强制缓存")]),v._v(" "),_("p",[v._v("强制缓存，在缓存过期前，从缓存中获取，不会从服务器发送请求。状态码为200")]),v._v(" "),_("ul",[_("li",[v._v("from memory cache")])]),v._v(" "),_("p",[v._v("不请求网络资源，资源在内存当中，一般脚本、字体、图片会存在内存当中。浏览器关闭后，数据不存在")]),v._v(" "),_("ul",[_("li",[v._v("from disk cache")])]),v._v(" "),_("p",[v._v("不请求网络资源，在磁盘当中，一般非脚本会存在内存当中，如css等。 浏览器关闭后仍然存在")]),v._v(" "),_("ol",[_("li",[v._v("Expires")])]),v._v(" "),_("p",[_("code",[v._v("('Expires', Sat, 25 Apr 2020 13:32:03 GMT)")])]),v._v(" "),_("p",[v._v("response header设置Expires，缓存过期时间GMT时间。")]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("Cache-Control")])]),v._v(" "),_("p",[_("code",[v._v("('Cache-Control', 'public,max-age=120')")])]),v._v(" "),_("p",[v._v("private, public max-age, must-revalidate")]),v._v(" "),_("p",[v._v("缓存过期的相对时间，几分钟内过期。")]),v._v(" "),_("h3",{attrs:{id:"协商缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[v._v("#")]),v._v(" 协商缓存")]),v._v(" "),_("p",[v._v("第一次请求数据时，服务器将缓存标识响应给客户端，客户端备份在缓存中，再次请求时，会将缓存中的标示发给服务器，服务器根据标示判断。若未失效，返回304，浏览器直接使用缓存数据。")]),v._v(" "),_("ol",[_("li",[v._v("Last-Modified")])]),v._v(" "),_("p",[v._v("Last-Modified 服务器在响应请求时，会告诉浏览器资源的最后修改时间")]),v._v(" "),_("p",[v._v("if-Modified-Since: 浏览器再次请求服务器的时候，请求头会包含此字段，后面跟着在缓存中获得的最后修改时间")]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("Etag")])]),v._v(" "),_("p",[v._v("Etag  服务器响应请求时，通过此字段告诉浏览器当前资源在服务器生成的唯一标识（生成规则由服务器决定）")]),v._v(" "),_("p",[v._v("If-None-Match： 再次请求服务器时，浏览器的请求报文头部会包含此字段，后面的值为在缓存中获取的标识。服务器接收到次报文后发现If-None-Match则与被请求资源的唯一标识进行对比。")]),v._v(" "),_("h2",{attrs:{id:"http-请求方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-请求方法"}},[v._v("#")]),v._v(" HTTP 请求方法")]),v._v(" "),_("ul",[_("li",[v._v("GET")])]),v._v(" "),_("p",[v._v("用于请求资源获取数据，可以缓存")]),v._v(" "),_("ul",[_("li",[v._v("POST")])]),v._v(" "),_("p",[v._v("用于提交表单或者上传文件")]),v._v(" "),_("ul",[_("li",[v._v("HEAD")])]),v._v(" "),_("p",[v._v("与get请求类似，返回的相应中没有具体的内容，用于获取报头")]),v._v(" "),_("ul",[_("li",[v._v("OPTIONS")])]),v._v(" "),_("p",[v._v("获取服务器支持的HTTP请求方法。跨域请求时，复杂请求（自定义headers）在发送真正请求前发送Options请求。")]),v._v(" "),_("ul",[_("li",[v._v("DELETE")])]),v._v(" "),_("p",[v._v("请求服务器器删除Request-URI所标识的资源")]),v._v(" "),_("ul",[_("li",[v._v("PUT")])]),v._v(" "),_("p",[v._v("向指定资源位置上传其最新内容，覆盖")]),v._v(" "),_("ul",[_("li",[v._v("TRACE")])]),v._v(" "),_("p",[v._v("回显服务器收到的请求，主要用于测试或诊断")]),v._v(" "),_("ul",[_("li",[v._v("CONNECT")])]),v._v(" "),_("p",[v._v("建立一个到由目标资源标识的服务器的隧道。")]),v._v(" "),_("ul",[_("li",[v._v("PATCH")])]),v._v(" "),_("p",[v._v("PATCH  方法是非幂等的，连续多个的相同请求会产生不同的效果")]),v._v(" "),_("h2",{attrs:{id:"cors跨域资源共享"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cors跨域资源共享"}},[v._v("#")]),v._v(" CORS跨域资源共享")]),v._v(" "),_("h3",{attrs:{id:"简单请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简单请求"}},[v._v("#")]),v._v(" 简单请求")]),v._v(" "),_("ul",[_("li",[v._v("请求方法\n"),_("ul",[_("li",[v._v("GET")]),v._v(" "),_("li",[v._v("HEAD")]),v._v(" "),_("li",[v._v("POST")])])]),v._v(" "),_("li",[v._v("HEAD只能以下\n"),_("ul",[_("li",[v._v("Accept")]),v._v(" "),_("li",[v._v("Accept-Language")]),v._v(" "),_("li",[v._v("Content-Language")]),v._v(" "),_("li",[v._v("Content-Type")]),v._v(" "),_("li",[v._v("DPR")]),v._v(" "),_("li",[v._v("Downlink")]),v._v(" "),_("li",[v._v("Save-Data")]),v._v(" "),_("li",[v._v("Viewport-Width")]),v._v(" "),_("li",[v._v("Width")])])]),v._v(" "),_("li",[v._v("cotent-type为以下\n"),_("ul",[_("li",[v._v("text/plain")]),v._v(" "),_("li",[v._v("multipart/form-data")]),v._v(" "),_("li",[v._v("application/x-www-form-urlencoded")])])]),v._v(" "),_("li",[v._v("请求中的任意XMLHttpRequestUpload 对象均没有注册任何事件监听器；XMLHttpRequestUpload 对象可以使用 XMLHttpRequest.upload 属性访问。")]),v._v(" "),_("li",[v._v("请求中没有使用 ReadableStream 对象。")])]),v._v(" "),_("h3",{attrs:{id:"预检请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#预检请求"}},[v._v("#")]),v._v(" 预检请求")]),v._v(" "),_("p",[v._v('需预检的请求”要求必须首先使用 OPTIONS   方法发起一个预检请求到服务器，以获知服务器是否允许该实际请求。"预检请求“的使用，可以避免跨域请求对服务器的用户数据产生未预期的影响。')]),v._v(" "),_("p",[v._v("Access-Control-Allow-Origin(必须)\nAccess-Control-Allow-Credentials(可选)\nAccess-Control-Expose-Headers(可选)")]),v._v(" "),_("p",[v._v("Access-Control-Request-Method\nAccess-Control-Request-Headers\nAccess-Control-Allow-Origin(必须)\nAccess-Control-Allow-Methods (必须)\nAccess-Control-Allow-Headers\nAccess-Control-Allow-Credentials(可选)\nAccess-Control-Max-Age(可选)")])])}),[],!1,null,null,null);t.default=l.exports}}]);